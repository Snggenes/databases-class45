1-
The columns which consist of more than one value violate 1NF rule.
In this case food_code column and food_description column violates the 1NF rule.
dinner_date also violates because it contains different date formats
One way to solve taht problem is to create new table associated with required columns in this table.

2-
Rather then extracting , we should create other tables for example,
we should have an apart table only for venue info,
and the exact thing for food info.
For example
Members table
--
member_id (Primary Key)
member_name
member_address

Dinners table
--
dinner_id (Primary Key)
dinner_date
venue_code
venue_description

Foods
--
food_code table
food_description

This is an easy way..
Third question explains it all in my opinion.


3-
3NF rule builds on the concepts of 1NF and 2NF and additionally
non-prime attributes must depend on the primary key directly.
For example

Members Table
--
member_id (Primary Key)
member_name
member_address

Venues Table
--
venue_code (Primary Key)
venue_description

Foods Table
--
food_code (Primary Key)
food_description

Dinners Table
--
dinner_id (Primary Key)
dinner_date
venue_code (Foreign Key referencing Venues)
food_code (Foreign Key referencing Foods)

GuestList Table
--
member_id (Foreign Key referencing Members)
dinner_id (Foreign Key referencing Dinners)

With foreign key referencing, everthing becomes clearer and
it doesnt violate 3NF rule.